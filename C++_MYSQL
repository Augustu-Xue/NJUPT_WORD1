#include <Windows.h>
#include <mysql.h>
#include <string>
#include <iostream>
#include <vector>
#include<algorithm>
#include "Card.hpp"
using namespace std;
char query[150]; //查询语句

class dataBase {
    MYSQL m_sqlCon;
    const char host[20] = "140.82.48.247";      //localhost 或者远程地址，此处为云服务器地址
    const char user[20] = "root";               //使用root登录，同样可用其他账号 
    const char pass[20] = "Gscs987654321!";     //密码
    const char databaseName[7] = "augu";        //使用“augu”数据库
    const int port = 3306;                      //端口
public:
    bool initConnection();
    void user_query();
    bool InsertData(Card& ca);
    bool ModifyData(Card& ca);
    bool DeleteData(Card& ca);
};

bool dataBase::initConnection() {
    try {
        if (mysql_init(&m_sqlCon) == NULL) {
            std::cout << "初始化数据库失败" << std::endl;
            return false;
        }
        if (!mysql_real_connect(&m_sqlCon, host, user, pass, databaseName, port, NULL, 0))
        {
            std::cout << "数据库连接失败" << std::endl;
            return false;
        }
        std::cout << "数据库连接成功" << std::endl;
        mysql_query(&m_sqlCon, "SET NAMES GBK"); //设置编码格式
        return true;
    }
    catch (...)
    {
        std::cout << "出错啦" << std::endl;
        return false;
    }
}
void dataBase::user_query() {
    if (mysql_query(&m_sqlCon, "select * from dictionary")) {       //表名称“dictionary”
        std::cout << "查询失败" << std::endl;
        return;
    }
    std::cout << "查询成功" << std::endl;
    MYSQL_RES* result;
    result = mysql_store_result(&m_sqlCon);
    if (result) {
        int row_num, col_num;
        row_num = mysql_num_rows(result);
        col_num = mysql_num_fields(result);
        std::cout << "共有" << row_num << "条数据，以下为其详细内容：" << std::endl;
        MYSQL_FIELD* fd;
        while (fd = mysql_fetch_field(result)) {
            std::cout << fd->name << "\t";
        }
        std::cout << std::endl;
        MYSQL_ROW sql_row;
        while (sql_row = mysql_fetch_row(result)) {
            for (int i = 0; i < col_num; i++) {
                if (sql_row[i] == NULL) std::cout << "NULL\t";
                else std::cout << sql_row[i] << "\t";
            }
            std::cout << std::endl;
        }
    }
    if (result != NULL)
        mysql_free_result(result);

}
bool dataBase::InsertData(Card& ca)
{
    mysql_query(&m_sqlCon, "SET NAMES GBK");


    sprintf_s(query, "insert into dictionary values (%s, '%s', '%s','%s');", ca.get_info().c_str(), ca.get_english().c_str(), ca.get_property().c_str(), ca.get_chinese().c_str());  //数据库char类型和string类型不能转换，使用c_str转换成c风格字符
    if (mysql_query(&m_sqlCon, query))        //执行SQL语句
    {
        printf("Query failed (%s)\n", mysql_error(&m_sqlCon));
        return false;
    }
    else
    {
        printf("Insert success\n");
        return true;
    }
}
bool dataBase::ModifyData(Card& ca)         //暂时功能只有查询中文换英文，可以再加
{
    sprintf_s(query, "update dictionary set english='%s' where chinese='%s'", ca.get_english().c_str(), ca.get_chinese().c_str());
    if (mysql_query(&m_sqlCon, query))        //执行SQL语句
    {
        printf("Query failed (%s)\n", mysql_error(&m_sqlCon));
        return false;
    }
    else
    {
        printf("Insert success\n");
        return true;
    }
}
bool dataBase::DeleteData(Card& ca)
{

    sprintf_s(query, "delete from dictionary where info=%s", ca.get_info().c_str());
    /* char query[100];
     printf("please input the sql:\n");
     gets_s(query);  //这里手动输入sql语句*/
    if (mysql_query(&m_sqlCon, query))        //执行SQL语句
    {
        printf_s("Query failed (%s)\n", mysql_error(&m_sqlCon));
        return false;
    }
    else
    {
        printf("Insert success\n");
        return true;
    }

}


int main() {
    dataBase au;
    int basic = 3;//序号
    char english;//英文
    char property;//词性
    char chinese;//中文
    au.initConnection();
    au.user_query();
    Card c1("monkey", "猴子", "n",  "6");
    c1.show_all();
    au.InsertData(c1);
    au.user_query();

    getchar();
}
